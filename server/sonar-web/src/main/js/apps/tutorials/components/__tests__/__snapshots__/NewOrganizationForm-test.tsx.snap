// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates new organization 1`] = `
<NewOrganizationForm
  onDelete={[MockFunction]}
  onDone={[MockFunction]}
>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="input-super-large spacer-right text-middle"
      maxLength={32}
      minLength={2}
      onChange={[Function]}
      placeholder="onboarding.organization.placeholder"
      required={true}
      type="text"
      value=""
    />
    <SubmitButton
      className="text-middle"
      disabled={true}
    >
      <Button
        className="text-middle"
        disabled={true}
        preventDefault={false}
        type="submit"
      >
        <button
          className="button text-middle"
          disabled={true}
          onClick={[Function]}
          type="submit"
        >
          create
        </button>
      </Button>
    </SubmitButton>
    <div
      className="note spacer-top abs-width-300"
    >
      onboarding.organization.key_requirement
    </div>
  </form>
</NewOrganizationForm>
`;

exports[`creates new organization 2`] = `
<NewOrganizationForm
  onDelete={[MockFunction]}
  onDone={[MockFunction]}
>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="input-super-large spacer-right text-middle"
      maxLength={32}
      minLength={2}
      onChange={[Function]}
      placeholder="onboarding.organization.placeholder"
      required={true}
      type="text"
      value="foo"
    />
    <i
      className="spinner text-middle"
    />
    <div
      className="note spacer-top abs-width-300"
    >
      onboarding.organization.key_requirement
    </div>
  </form>
</NewOrganizationForm>
`;

exports[`creates new organization 3`] = `
<NewOrganizationForm
  onDelete={[MockFunction]}
  onDone={
    [MockFunction] {
      "calls": Array [
        Array [
          "foo",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
>
  <div>
    <span
      className="spacer-right text-middle"
    >
      foo
    </span>
    <DeleteButton
      className="button-small"
      onClick={[Function]}
    >
      <ButtonIcon
        className="button-small"
        color="#d4333f"
        onClick={[Function]}
      >
        <Button
          className="button-small button-icon"
          onClick={[Function]}
          stopPropagation={true}
          style={
            Object {
              "color": "#d4333f",
            }
          }
        >
          <button
            className="button button-small button-icon"
            onClick={[Function]}
            style={
              Object {
                "color": "#d4333f",
              }
            }
            type="button"
          >
            <ClearIcon />
          </button>
        </Button>
      </ButtonIcon>
    </DeleteButton>
  </div>
</NewOrganizationForm>
`;

exports[`deletes organization 1`] = `
<NewOrganizationForm
  onDelete={[MockFunction]}
  onDone={[MockFunction]}
>
  <div>
    <span
      className="spacer-right text-middle"
    >
      foo
    </span>
    <DeleteButton
      className="button-small"
      onClick={[Function]}
    >
      <ButtonIcon
        className="button-small"
        color="#d4333f"
        onClick={[Function]}
      >
        <Button
          className="button-small button-icon"
          onClick={[Function]}
          stopPropagation={true}
          style={
            Object {
              "color": "#d4333f",
            }
          }
        >
          <button
            className="button button-small button-icon"
            onClick={[Function]}
            style={
              Object {
                "color": "#d4333f",
              }
            }
            type="button"
          >
            <ClearIcon />
          </button>
        </Button>
      </ButtonIcon>
    </DeleteButton>
  </div>
</NewOrganizationForm>
`;

exports[`deletes organization 2`] = `
<NewOrganizationForm
  onDelete={[MockFunction]}
  onDone={[MockFunction]}
>
  <div>
    <span
      className="spacer-right text-middle"
    >
      foo
    </span>
    <i
      className="spinner text-middle"
    />
  </div>
</NewOrganizationForm>
`;

exports[`deletes organization 3`] = `
<NewOrganizationForm
  onDelete={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  onDone={[MockFunction]}
>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      className="input-super-large spacer-right text-middle"
      maxLength={32}
      minLength={2}
      onChange={[Function]}
      placeholder="onboarding.organization.placeholder"
      required={true}
      type="text"
      value=""
    />
    <SubmitButton
      className="text-middle"
      disabled={true}
    >
      <Button
        className="text-middle"
        disabled={true}
        preventDefault={false}
        type="submit"
      >
        <button
          className="button text-middle"
          disabled={true}
          onClick={[Function]}
          type="submit"
        >
          create
        </button>
      </Button>
    </SubmitButton>
    <div
      className="note spacer-top abs-width-300"
    >
      onboarding.organization.key_requirement
    </div>
  </form>
</NewOrganizationForm>
`;
